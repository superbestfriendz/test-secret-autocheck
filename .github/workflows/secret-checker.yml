name: check-thedamn-secret

on:
  pull_request:
    paths:
      - secrets/test/*
  pull_request_review:
    types: [submitted]

jobs:
  validate_yaml:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Check out repository
    - uses: mikefarah/yq@v4.26.1
      name: yq - portable yaml processor
    - uses: tj-actions/changed-files@v24
      name: Get changed files
      id: changed-files

    - name: Validate yaml for changed files
      id: validate-yaml
      run: |
        secretsPathRegex="^secrets\/test\/.*"
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
        if [[ "$file" =~ $secretsPathRegex ]]; then
          echo "Evaluating $file..."
          yq eval $file || (echo "$file yaml format failed! Check your format."  && exit 1)
          echo "$file check exited with $? status"
        fi
        done

    - name: Check line format
      if: steps.validate-yaml.outcome == 'success' 
      run: |
        secretsPathRegex="^secrets\/test\/.*"
        secretStringRegex="^[A-Z0-9_]+: ENC\[PKCS7,MII[A-Za-z0-9+\/=]+]"
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          if [[ "$file" =~ $secretsPathRegex ]]; then
            while IFS= read -r line || [ -n "$line" ]; do
              echo "validating secret: $line"
              [[ "$line" =~ $secretStringRegex ]] && echo "this secret is valid" || (echo "this secret is invalid." && exit 1)
            done <$file
          fi
        done
  auto_approve_secret_pr:
    if: ${{ (github.event.review.state == 'approved')  && (contains(github.event.pull_request.labels.*.name, 'secrets')) }}
    runs-on: ubuntu-latest
    steps:
      - uses: tspascoal/get-user-teams-membership@v1
        id: checkUserMember
        with:
          username: ${{ github.event.review.user.login}}
          organization: "Kaligo"
          team: 'devops'
          GITHUB_TOKEN: "${{ secrets.PAT_SECRET_APPROVER }}"
      - if: ${{ steps.checkUserMember.outputs.isTeamMember == 'false' }}
        run: echo "${{ github.event.review.user.login}} is NOT member of devops omegalul!"